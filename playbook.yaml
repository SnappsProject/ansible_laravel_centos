---
- name: Deploy - Laravel CentOS - Dev Environment
  gather_facts: No
  hosts: vm-laradev  #set your vm dev
  vars:
    server_name: 'alumni.pwc.lan'
    app_root: '/srv/www/app/http/'
    document_root: '/srv/www/app/http/public'
    apache_logs: '/srv/www/app/logs'
    composer_url: 'https://getcomposer.org/download/1.9.3/composer.phar'
  tasks:
    - import_tasks: tasks/packages.yaml 
    - name: Configure Apache2 Vhost
      template:
        src: templates/vhost.j2 
        dest: /etc/httpd/conf.d/vhost.conf
        backup: yes 
    - name: Enable Firewall Rules (http)
      firewalld:
        service: http
        permanent: yes
        zone: public
        state: enabled
        immediate: yes
    - name: Enable Firewall Rules (https)
      firewalld:
        service: https
        zone: public
        permanent: yes
        state: enabled
        immediate: yes
    - name: Check Composer is installed
      stat: 
        path: /usr/local/bin/composer
      register: composer_check
    - name: Install PHP Composer (1/3)
      get_url:
        url: "{{ composer_url }}"
        dest: /usr/local/bin
      when: composer_check.stat.exists == False
    - name: Install PHP Composer (2/3)
      command: mv /usr/local/bin/composer.phar /usr/local/bin/composer
      when: composer_check.stat.exists == False
    - name: Install PHP Composer (3/3)
      command: chmod +x /usr/local/bin/composer
      when: composer_check.stat.exists == False
    - name: Prepare Laravel Setup (1/2)
      file:
        path: "{{ app_root }}"
        state: directory
    - name: Prepare Laravel Setup (2/2)
      file:
        path: "{{ apache_logs }}"
        state: directory
    - name: Create Apache logs file
      file:
        path: "{{ apache_logs }}/access_log"
        owner: apache
        group: apache
        state: touch
    - name: Create Apache logs file
      file:
        path: "{{ apache_logs }}/error_log"
        owner: apache
        group: apache
        state: touch
    - name: Check laravel App Exists 
      stat: 
        path: "{{ app_root }}/.env"
      register: laravel_check
    - debug:
        msg: "Laravel not installed"
      when: laravel_check.stat.exists == False
    - name: Install Laravel Framework
      command: "composer create-project --prefer-dist laravel/laravel {{ app_root }}"
      when: laravel_check.stat.exists == False
    - name: Adsujt Permission files for Laravel 
      file:
        path: "{{ app_root }}/storage"
        recurse: yes
        owner: apache
        group: apache
    - name: Fix Permission files for Laravel
      file:
        path: "{{ document_root }}"
        recurse: yes
        owner: apache
        group: apache
    - name: Fix Permission files for Laravel 
      file:
        path: "{{ app_root }}/bootstrap/cache"
        recurse: yes
        owner: apache
        group: apache
    - name: Set httpd_can_network_connect_db flag on and keep it persistent across reboots
      seboolean:
        name: httpd_can_network_connect_db
        state: yes
        persistent: yes
#TODO selinux module not work...https://docs.ansible.com/ansible/latest/modules/sefcontext_module.html 
    - name: Fix SElinux context for Apache logs
      command:  "chcon -R -t httpd_sys_rw_content_t {{ apache_logs }}"
    - name: Fix SElinux context for laravel
      command:  "chcon -R -t httpd_sys_content_t {{ app_root }}"
    - name: Fix SElinux context for laravel
      command:  "chcon -R -t httpd_sys_rw_content_t {{ app_root }}/storage"
    - name: Fix SElinux context for laravel
      command:  "chcon -R -t httpd_sys_rw_content_t {{ app_root }}/bootstrap/cache"
    - name: Enable and Running MariaDB
      systemd:
        name: mariadb
        enabled: yes
        state: started
    - name: Enable and Running Redis Server
      systemd:
        name: redis
        enabled: yes
        state: started
    - name: Enable and Running Httpd
      systemd:
        name: httpd
        enabled: yes
        state: started
